<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.ericsson.nms.litp.3pps</groupId>
        <artifactId>EXTRlitppuppet</artifactId>
        <version>2.5.1-SNAPSHOT</version>
    </parent>
    <artifactId>Puppet_Builder</artifactId>
    <name>[${project.parent.artifactId}] Generate RPMs</name>
    <packaging>pom</packaging>

    <properties>
        <product>LITP</product>
        <release>LITP 2.0</release>
        <spec.path>puppet-${puppet.version}/ext/redhat/puppet.spec</spec.path>
    </properties>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.8</version>
                <executions>
                    <execution>
                        <id>download_source</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.puppetlabs</groupId>
                                    <artifactId>puppet</artifactId>
                                    <version>${puppet.version}</version>
                                    <type>tar.gz</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}/DOWNLOADS</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
               <groupId>org.codehaus.mojo</groupId>
               <artifactId>exec-maven-plugin</artifactId>
               <version>1.2.1</version>
               <executions>
                   <execution>
                       <id>create-SPEC-directory</id>
                       <phase>initialize</phase>
                       <goals>
                           <goal>exec</goal>
                       </goals>
                       <configuration>
                        <executable>mkdir</executable>
                            <arguments>
                                <argument>-p</argument>
                                <argument>${project.build.directory}/SPEC/puppet-${puppet.version}/ext/redhat/</argument>
                                <argument>${project.build.directory}/ADDITIONAL/</argument>
                                <argument>${project.build.directory}/SOURCES/</argument>
                            </arguments>
                       </configuration>
                    </execution>
                    <execution>
                       <id>copy-puppet.spec-file</id>
                       <phase>initialize</phase>
                       <goals>
                           <goal>exec</goal>
                       </goals>
                       <configuration>
                        <executable>cp</executable>
                          <workingDirectory>${project.build.directory}</workingDirectory>
                            <arguments>
                                <argument>${basedir}/src/main/specs/puppet.spec</argument>
                                <argument>${project.build.directory}/SPEC/puppet-${puppet.version}/ext/redhat/</argument>
                            </arguments>
                       </configuration>
                   </execution>
                   <execution>
                       <id>Build_server_version</id>
                       <phase>generate-resources</phase>
                       <goals>
                           <goal>exec</goal>
                       </goals>
                       <configuration>
                        <executable>lsb_release</executable>
                            <arguments>
                                <argument>-a</argument>
                            </arguments>
                       </configuration>
                   </execution>
                   <execution>
                       <id>patch-puppet-spec-file</id>
                       <phase>generate-resources</phase>
                       <goals>
                           <goal>exec</goal>
                       </goals>
                       <configuration>
                        <environmentVariables>
                          <TMPDIR>
                             ${project.build.directory}
                          </TMPDIR>
                        </environmentVariables>
                        <executable>patch</executable>
                            <arguments>
                                <argument>${project.build.directory}/SPEC/${spec.path}</argument>
                                <argument>${basedir}/src/main/patchFiles/puppet.spec.patch</argument>
                            </arguments>
                       </configuration>
                   </execution>
                   <execution>
                       <id>Compile-SELinux-policy-module-mcoiptables.mod</id>
                       <phase>generate-resources</phase>
                       <goals>
                           <goal>exec</goal>
                       </goals>
                       <configuration>
                        <executable>checkmodule</executable>
                            <arguments>
                                <argument>-M</argument>
                                <argument>-m</argument>
                                <argument>-o</argument>
                                <argument>${project.build.directory}/ADDITIONAL/mcoiptables.mod</argument>
                                <argument>${basedir}/src/main/selinux/mcoiptables.te</argument>
                            </arguments>
                       </configuration>
                   </execution>
                   <execution>
                       <id>Compile-SELinux-policy-module-domain.mod</id>
                       <phase>generate-resources</phase>
                       <goals>
                           <goal>exec</goal>
                       </goals>
                       <configuration>
                        <executable>checkmodule</executable>
                            <arguments>
                                <argument>-M</argument>
                                <argument>-m</argument>
                                <argument>-o</argument>
                                <argument>${project.build.directory}/ADDITIONAL/domain.mod</argument>
                                <argument>${basedir}/src/main/selinux/domain.te</argument>
                            </arguments>
                       </configuration>
                   </execution>
                   <execution>
                       <id>Compile-SELinux-policy-module-openshift_initrc.mod</id>
                       <phase>generate-resources</phase>
                       <goals>
                           <goal>exec</goal>
                       </goals>
                       <configuration>
                        <executable>checkmodule</executable>
                            <arguments>
                                <argument>-M</argument>
                                <argument>-m</argument>
                                <argument>-o</argument>
                                <argument>${project.build.directory}/ADDITIONAL/openshift_initrc.mod</argument>
                                <argument>${basedir}/src/main/selinux/openshift_initrc.te</argument>
                            </arguments>
                       </configuration>
                   </execution>
                   <execution>
                       <id>Compile-SELinux-policy-module-mcollective.mod</id>
                       <phase>generate-resources</phase>
                       <goals>
                           <goal>exec</goal>
                       </goals>
                       <configuration>
                        <executable>checkmodule</executable>
                            <arguments>
                                <argument>-M</argument>
                                <argument>-m</argument>
                                <argument>-o</argument>
                                <argument>${project.build.directory}/ADDITIONAL/mcollective.mod</argument>
                                <argument>${basedir}/src/main/selinux/mcollective.te</argument>
                            </arguments>
                       </configuration>
                   </execution>
                   <execution>
                       <id>Compile-SELinux-policy-module-dbus_send_msg.mod</id>
                       <phase>generate-resources</phase>
                       <goals>
                           <goal>exec</goal>
                       </goals>
                       <configuration>
                        <executable>checkmodule</executable>
                            <arguments>
                                <argument>-M</argument>
                                <argument>-m</argument>
                                <argument>-o</argument>
                                <argument>${project.build.directory}/ADDITIONAL/dbus_send_msg.mod</argument>
                                <argument>${basedir}/src/main/selinux/dbus_send_msg.te</argument>
                            </arguments>
                       </configuration>
                   </execution>
                   <execution>
                       <id>Create-SELinux-policy-package-mcoiptables.pp</id>
                       <phase>process-resources</phase>
                       <goals>
                           <goal>exec</goal>
                       </goals>
                       <configuration>
                        <executable>semodule_package</executable>
                            <arguments>
                                <argument>-m</argument>
                                <argument>${project.build.directory}/ADDITIONAL/mcoiptables.mod</argument>
                                <argument>-o</argument>
                                <argument>${project.build.directory}/ADDITIONAL/mcoiptables.pp</argument>
                            </arguments>
                       </configuration>
                   </execution>
                   <execution>
                       <id>Create-SELinux-policy-package-domain.pp</id>
                       <phase>process-resources</phase>
                       <goals>
                           <goal>exec</goal>
                       </goals>
                       <configuration>
                        <executable>semodule_package</executable>
                            <arguments>
                                <argument>-m</argument>
                                <argument>${project.build.directory}/ADDITIONAL/domain.mod</argument>
                                <argument>-o</argument>
                                <argument>${project.build.directory}/ADDITIONAL/domain.pp</argument>
                            </arguments>
                       </configuration>
                   </execution>
                   <execution>
                       <id>Create-SELinux-policy-package-openshift_initrc.pp</id>
                       <phase>process-resources</phase>
                       <goals>
                           <goal>exec</goal>
                       </goals>
                       <configuration>
                        <executable>semodule_package</executable>
                            <arguments>
                                <argument>-m</argument>
                                <argument>${project.build.directory}/ADDITIONAL/openshift_initrc.mod</argument>
                                <argument>-o</argument>
                                <argument>${project.build.directory}/ADDITIONAL/openshift_initrc.pp</argument>
                            </arguments>
                       </configuration>
                   </execution>
                   <execution>
                       <id>Create-SELinux-policy-package-mcollective.pp</id>
                       <phase>process-resources</phase>
                       <goals>
                           <goal>exec</goal>
                       </goals>
                       <configuration>
                        <executable>semodule_package</executable>
                            <arguments>
                                <argument>-m</argument>
                                <argument>${project.build.directory}/ADDITIONAL/mcollective.mod</argument>
                                <argument>-o</argument>
                                <argument>${project.build.directory}/ADDITIONAL/mcollective.pp</argument>
                            </arguments>
                       </configuration>
                   </execution>
                   <execution>
                       <id>Create-SELinux-policy-package-dbus_send_msg.pp</id>
                       <phase>process-resources</phase>
                       <goals>
                           <goal>exec</goal>
                       </goals>
                       <configuration>
                        <executable>semodule_package</executable>
                            <arguments>
                                <argument>-m</argument>
                                <argument>${project.build.directory}/ADDITIONAL/dbus_send_msg.mod</argument>
                                <argument>-o</argument>
                                <argument>${project.build.directory}/ADDITIONAL/dbus_send_msg.pp</argument>
                            </arguments>
                       </configuration>
                   </execution>
                    <execution>
                       <id>dupe-puppet-src-tar-file</id>
                       <phase>generate-resources</phase>
                       <goals> <goal>exec</goal> </goals>
                       <configuration>
                        <executable>cp</executable>
                          <workingDirectory>${project.build.directory}</workingDirectory>
                            <arguments>
                                <argument>DOWNLOADS/puppet-${puppet.version}.tar.gz</argument>
                                <argument>SOURCES/puppet-${puppet.version}.tar.gz</argument>
                            </arguments>
                       </configuration>
                   </execution>
                   <execution>
                        <id>extract-puppet_tar-file</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>tar</executable>
                            <workingDirectory>${project.build.directory}</workingDirectory>
                            <arguments>
                                <argument>-xzvf</argument>
                                <argument>SOURCES/puppet-${puppet.version}.tar.gz</argument>
                            </arguments>
                        </configuration>
                   </execution>
                   <execution>
                       <id>copy-puppetctl-script</id>
                       <phase>generate-resources</phase>
                       <goals>
                           <goal>exec</goal>
                       </goals>
                       <configuration>
                          <executable>cp</executable>
                          <workingDirectory>${project.build.directory}</workingDirectory>
                          <arguments>
                              <argument>${basedir}/src/main/scripts/puppetctl.sh</argument>
                              <argument>${project.build.directory}/puppet-${puppet.version}/ext/redhat/</argument>
                          </arguments>
                       </configuration>
                   </execution>
                   <execution>
                       <id>patch-puppet-defaults</id>
                       <phase>generate-resources</phase>
                       <goals>
                           <goal>exec</goal>
                       </goals>
                       <configuration>
                        <environmentVariables>
                          <TMPDIR>
                             ${project.build.directory}
                          </TMPDIR>
                        </environmentVariables>
                        <executable>patch</executable>
                            <arguments>
                                <argument>${project.build.directory}/puppet-${puppet.version}/lib/puppet/defaults.rb</argument>
                                <argument>${basedir}/src/main/patchFiles/defaults.rb.patch</argument>
                            </arguments>
                       </configuration>
                   </execution>
                   <execution>
                       <id>patch-puppet-event-manager</id>
                       <phase>generate-resources</phase>
                       <goals>
                           <goal>exec</goal>
                       </goals>
                       <configuration>
                        <environmentVariables>
                          <TMPDIR>
                             ${project.build.directory}
                          </TMPDIR>
                        </environmentVariables>
                        <executable>patch</executable>
                            <arguments>
                                <argument>${project.build.directory}/puppet-${puppet.version}/lib/puppet/transaction/event_manager.rb</argument>
                                <argument>${basedir}/src/main/patchFiles/event_manager.rb.patch</argument>
                            </arguments>
                       </configuration>
                   </execution>
                   <execution>
                        <id>patch-puppet-init-script</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <environmentVariables>
                                <TMPDIR>
                              ${project.build.directory}
                           </TMPDIR>
                            </environmentVariables>
                            <executable>patch</executable>
                            <arguments>
                                <argument>${project.build.directory}/puppet-${puppet.version}/ext/redhat/client.init</argument>
                                <argument>${basedir}/src/main/patchFiles/puppet_agent_init.patch</argument>
                            </arguments>
                        </configuration>
                   </execution>
                   <execution>
                        <id>patch-puppet-certificate-script</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <environmentVariables>
                                <TMPDIR>
                                    ${project.build.directory}
                                </TMPDIR>
                            </environmentVariables>
                            <executable>patch</executable>
                            <arguments>
                                <argument>${project.build.directory}/puppet-${puppet.version}/lib/puppet/ssl/certificate_revocation_list.rb</argument>
                                <argument>${basedir}/src/main/patchFiles/certificate_revocation_list.rb.patch</argument>
                            </arguments>
                        </configuration>
                   </execution>
                   <execution>
                        <id>patch-puppet-certificate-spec-script</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <environmentVariables>
                                <TMPDIR>
                                    ${project.build.directory}
                                </TMPDIR>
                            </environmentVariables>
                            <executable>patch</executable>
                            <arguments>
                                <argument>${project.build.directory}/puppet-${puppet.version}/spec/unit/ssl/certificate_revocation_list_spec.rb</argument>
                                <argument>${basedir}/src/main/patchFiles/certificate_revocation_list_spec.rb.patch</argument>
                            </arguments>
                        </configuration>
                   </execution>
                   <execution>
                        <id>patch-puppet-unit-file</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <environmentVariables>
                                <TMPDIR>
                              ${project.build.directory}
                           </TMPDIR>
                            </environmentVariables>
                            <executable>patch</executable>
                            <arguments>
                                <argument>${project.build.directory}/puppet-${puppet.version}/ext/systemd/puppet.service</argument>
                                <argument>${basedir}/src/main/patchFiles/puppet.service.patch</argument>
                            </arguments>
                        </configuration>
                   </execution>
                   <execution>
                        <id>retar-puppet_tar-file</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>tar</executable>
                            <workingDirectory>${project.build.directory}</workingDirectory>
                            <arguments>
                                <argument>-czvf</argument>
                                <argument>SOURCES/puppet-${puppet.version}.tar.gz</argument>
                                <argument>puppet-${puppet.version}/</argument>
                            </arguments>
                        </configuration>
                   </execution>
                   <execution>
                      <id>define-rpm-parameters</id>
                      <phase>prepare-package</phase>
                      <goals>
                          <goal>exec</goal>
                      </goals>
                      <configuration>
                         <environmentVariables>
                           <TMPDIR>
                               ${project.build.directory}
                           </TMPDIR>
                         </environmentVariables>
                         <executable>${basedir}/src/main/scripts/define-rpm-parameters.sh</executable>
                         <workingDirectory>${project.build.directory}</workingDirectory>
                           <arguments>
                              <argument>${ruby.path}</argument>
                              <argument>${spec.path}</argument>
                              <argument>${rpm.version}</argument>
                              <argument>${ericsson.rstate}</argument>
                           </arguments>
                      </configuration>
                   </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
